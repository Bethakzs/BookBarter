version: '3'
services:
  eureka:
    build: ./eureka-service
    image: eureka-service
    ports:
      - 8761:8761
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: -1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_MESSAGE_MAX_BYTES: 20971520 # 20 MB
      KAFKA_REPLICA_FETCH_MAX_BYTES: 20971520 # 20 MB
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  user-db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: user
  user-service:
    build: ./user-service
    image: user-service
    depends_on:
      - user-db
      - eureka
      - kafka
    ports:
      - 8082:8082
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/user
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
      JWT_SECRET: sheeesh
      JWT_ACCESS_TOKEN_LIFETIME: 1h
      JWT_REFRESH_TOKEN_LIFETIME: 1d
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_KAFKA_PRODUCER_PROPERTIES_MAX_REQUEST_SIZE: 10485760 # 10 MB
#      SPRING_KAFKA_CONSUMER_PROPERTIES_MAX_PARTITION_FETCH_BYTES: 10485760 # 10 MB